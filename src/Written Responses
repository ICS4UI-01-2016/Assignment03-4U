A3Q1:
    Linear
    23 27 30 34 41 51 55 57 60 67 72 78 83 96
     x  x  x  x  !
    [0][1][2][3][4]

    return 4

    Binary
    23 27 30 34 41 51 55 57 60 67 72 78 83 96
    23 27 30 34 41 51 55 | 57 60 67 72 78 83 96
    23 27 30 34 41 51 55
    -- -- -- -- 41 51 55
    41 -- --
    [0]

    return 0

A3Q2:
    Bubble Sort

25 30 20 80 40
25 20 30 80 40
25 20 20 40 80
25 20 30 40 80
20 25 30 40 80
20 25 30 40 80

A3Q3:
    The maximum number of comparisons required to perform a binary search is
two since you can only find the middle value twice.

Ex. Search for 4.

1 2 3 4 5 6 7
      x
- - - - 5 6 7
- - - - 5 6 7
          x
- - - - 5 - -
- - - - 5 - -
        !

A3Q4:
    Selection sort since insertion is preferable for small arrays. Insertion
sort shuffles a number through the array to its position, while selection sort
looks for the smallest number to put in the correct order right away. 

A3Q5: 
    The best Big O value for any search algorithm can be O(1) because it runs
at a constant time. 